// This file was generated by [rspc](https://github.com/oscartbeaumont/rspc). Do not edit this file manually.

export type Procedures = {
    queries: never,
    mutations: 
        { key: "media.invokeMediaProperties", input: never, result: null } | 
        { key: "media.invokeMethod", input: Method, result: null } | 
        { key: "media.invokePlaybackInfo", input: never, result: null } | 
        { key: "media.invokeTimelineProperties", input: never, result: null },
    subscriptions: 
        { key: "media.mediaPropertiesChanged", input: never, result: MediaSessionData } | 
        { key: "media.playbackInfoChanged", input: never, result: MediaPlaybackData } | 
        { key: "media.sessionChanged", input: never, result: SessionChangedData } | 
        { key: "media.timelinePropertiesChanged", input: never, result: MediaTimelineData }
};

export interface MediaPlaybackData { isPlaying: boolean }

export interface MediaSessionData { isPlayEnabled: boolean, isPauseEnabled: boolean, isPlayOrPauseEnabled: boolean, isPreviousEnabled: boolean, isNextEnabled: boolean, title: string, artist: string, thumbnail: ThumbnailData }

export interface MediaTimelineData { timelineStartTime: bigint, timelineEndTime: bigint, timelinePosition: bigint }

export type Method = "play" | "pause" | "next" | "previous"

export interface SessionChangedData { appId: string, sessionActive: boolean }

export interface TailwindPalette { shades: Array<TailwindShade> }

export interface TailwindShade { number: string, hexcode: string, rgb: [number, number, number] }

export interface ThumbnailData { base64: string, palette: TailwindPalette, prominantColor: [number, number, number] }
